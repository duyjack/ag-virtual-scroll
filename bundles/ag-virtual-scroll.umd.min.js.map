{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/ag-virtual-scroll/classes/ag-vs-render-event.class.ts","../../src/ag-virtual-scroll/ag-vs-item/ag-vs-item.component.ts","../../src/ag-virtual-scroll/ag-virtual-scroll.component.ts","../../src/ag-virtual-scroll/pipes/math-abs.pipe.ts","../../src/ag-virtual-scroll/pipes/sticked-classes.pipe.ts","../../src/ag-virtual-scroll/ag-virtual-scroll.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","obj","assign","this","AgVsItemComponent","elRef","appRef","class","sticky","viewOk","onStickyChange","EventEmitter","isSticked","defineProperty","prototype","nativeElement","ngOnInit","ngAfterViewInit","ngOnChanges","changes","forceUpdateInputs","tick","getHtml","el","outerHTML","Component","args","selector","template","ElementRef","ApplicationRef","HostBinding","ViewChild","static","Input","AgVirtualSrollComponent","renderer","minRowHeight","height","originalItems","onItemsRender","prevOriginalItems","items","subscripAllVsItem","_indexCurrentSticky","indexNextSticky","indexesPrevStick","currentScroll","contentHeight","paddingTop","startIndex","endIndex","isTable","scrollIsUp","lastScrollIsUp","previousItemsHeight","containerWidth","currentIsPrev","indexPrevSticky","findCurrentStickyByIndex","currentStickyItem","comp","prepareDataItems","slice","some","index","sort","a","b","_this","filter","item","queryVsItems","toArray","itemsContainerElRef","subscribe","checkStickItem","listen","onScroll","bind","setTimeout","style","parseInt","console","warn","currentAndPrevItemsAreDiff","Array","fill","scrollTop","checkIsTable","notifyOnChanges","concat","ngAfterContentChecked","currentContainerWidth","itemsContainerEl","clientWidth","manipuleRenderedItems","end","up","registerCurrentItemsHeight","prepareDataVirtualScroll","children","getInsideChildrens","child","realIndex","getBoundingClientRect","getDimensions","dimensions","itemsThatAreGone","reduce","prev","curr","newPaddingTop","initialScroll","_c","_d","h","Math","min","numberItemsCanRender","indexCurrentSticky","outside","arguments","__spread","emit","AgVsRenderEvent","itemsNoSticky","floor","clientHeight","display","minHeight","className","unclassName","classList","add","remove","childrens","tagName","toUpperCase","transform","abs","vsItems","updateVsItems","getIndexNextSticky","currentStickIsEnded","setPrevAsCurrentSticky","getIndexCurrentSticky","afterPrev","vsIndex","lastVsIndex","vsItem","offsetTop","StickyItem","offsetHeight","currentHeight","offsetBottom","offsetTopNext","newDiffTop","diffTop","Observable","subscriber","forEach","subscrip","unsubscribe","interval","setInterval","diffMaxItemsRender","lastIndex","every","onStickyComponentChanged","_a","clearInterval","indexPrev","ngOnDestroy","Renderer2","ContentChildren","Output","isUp","MathAbsPipe","Pipe","name","StickedClassesPipe","exceptionClasses","classes","includes","split","exc","join","NgModule","imports","CommonModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class AgVsRenderEvent<T> {\n    public items: T[];\n    public startIndex: number;\n    public endIndex: number;\n    public length: number;\n\n    constructor(obj: Partial<AgVsRenderEvent<T>>) {\n        Object.assign(this, obj);\n    }\n}","import { Component, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, OnInit, HostBinding, ApplicationRef, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\nimport { AgVirtualSrollComponent } from '../ag-virtual-scroll.component';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n\tselector: 'ag-vs-item',\n\ttemplateUrl: './ag-vs-item.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }\n        \n        :host > ng-template {\n            display: inherit;\n            width: inherit;\n            height: inherit;\n        }`\n    ]\n})\nexport class AgVsItemComponent implements OnInit, AfterViewInit, OnChanges {\n    @HostBinding('class.ag-vs-item') public class: boolean = true;\n\n    @ViewChild('temp', {static: false}) public temp: TemplateRef<any>;\n\n    @Input('sticky') public sticky: boolean = false;\n\n    public get el() { return this.elRef && this.elRef.nativeElement; }\n\n    public viewOk: boolean = false;\n\n    public onStickyChange = new EventEmitter<boolean>(false);\n\n    public isSticked: boolean = false;\n\n    constructor(\n        public elRef: ElementRef<HTMLElement>,\n        public appRef: ApplicationRef\n\t) {\n    }\n    \n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\t\n\tngOnChanges(changes: SimpleChanges) {\n        if ('sticky' in changes)\n            this.onStickyChange.next(this.sticky);\n    }\n\n    public forceUpdateInputs() {\n        this.viewOk = false;\n        this.appRef.tick();\n        this.viewOk = true;\n    }\n\n    public getHtml() {\n       return this.el.outerHTML;\n    }\n}\n","import { Component, Input, ElementRef, ViewChild, AfterViewInit, OnChanges, SimpleChanges, Renderer2, OnInit, Output, EventEmitter, QueryList, ContentChildren, AfterContentChecked, OnDestroy } from '@angular/core';\nimport { AgVsRenderEvent } from './classes/ag-vs-render-event.class';\nimport { AgVsItemComponent } from './ag-vs-item/ag-vs-item.component';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n\tselector: 'ag-virtual-scroll',\n\ttemplateUrl: './ag-virtual-scroll.component.html',\n    styles: [`\n        :host {\n            display: block;\n            position: relative;\n            height: 100%;\n            width: 100%;\n            overflow-y: auto;\n        }\n\n        :host .content-height {\n            width: 1px;\n            opacity: 0;\n        }\n\n        :host .items-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        :host::ng-deep .items-container.sticked-outside > .ag-vs-item:last-child {\n            position: absolute;\n            top: 0;\n            left: -100%;\n        }\n\n        :host::ng-deep > .ag-vs-item {\n            position: absolute;\n            top: 0;\n            left: 0;\n            box-shadow: 0 5px 5px rgba(0, 0, 0, .1);\n            background: #FFF;\n        }`\n    ]\n})\nexport class AgVirtualSrollComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, AfterContentChecked {\n    @ViewChild('itemsContainer', {static: true}) private itemsContainerElRef: ElementRef<HTMLElement>;\n\n    @ContentChildren(AgVsItemComponent) private queryVsItems: QueryList<AgVsItemComponent>;\n\n    @Input('min-row-height') public minRowHeight: number = 40;\n    @Input('height') public height: string = 'auto';\n    @Input('items') public originalItems: any[] = [];\n\n    @Output() private onItemsRender = new EventEmitter<AgVsRenderEvent<any>>();\n\n    public prevOriginalItems: any[] = [];\n    public items: any[] = [];\n\n    private subscripAllVsItem: { comp: AgVsItemComponent, subscrip: Subscription }[] = [];\n\n    private _indexCurrentSticky: number = -1;\n    private get indexCurrentSticky() { return this._indexCurrentSticky; }\n    private set indexCurrentSticky(value: number) {\n        this._indexCurrentSticky = value;\n\n        let currentIsPrev = value === this.indexPrevSticky;\n\n        if (!currentIsPrev && value >= 0) {\n            this.findCurrentStickyByIndex();\n        }\n        else {\n            if (!currentIsPrev)\n                this.indexNextSticky = -1;\n\n            if (this.currentStickyItem)\n                this.currentStickyItem.comp.isSticked = false;\n            \n            this.currentStickyItem = null;\n        }\n\n        this.prepareDataItems();\n    }\n    \n    private get indexPrevSticky() { return this.indexesPrevStick.length ? this.indexesPrevStick[0] : -1; }\n    private set indexPrevSticky(value: number) {\n        if (value < 0) {\n            if (this.indexesPrevStick.length > 0)\n                this.indexesPrevStick = this.indexesPrevStick.slice(1);\n        }\n        else if (!this.indexesPrevStick.some(index => index === value))\n            this.indexesPrevStick.push(value);\n\n        if (this.indexesPrevStick.length)\n            this.indexesPrevStick = this.indexesPrevStick.sort((a,b) => b-a);\n    }\n\n    private indexNextSticky: number = -1;\n\n    private indexesPrevStick: number[] = [];\n\n    public currentStickyItem: StickyItem;\n\n    public currentScroll: number = 0;\n    public contentHeight: number = 0;\n    public paddingTop: number = 0;\n\n    public startIndex: number = 0;\n    public endIndex: number = 0;\n\n    private isTable: boolean = false;\n\n    private scrollIsUp: boolean = false;\n    private lastScrollIsUp: boolean = false;\n    \n    private previousItemsHeight: number[] = [];\n\n    public containerWidth: number = 0;\n\n    private get itemsNoSticky() { return this.currentStickyItem ? this.items.filter((item) => this.originalItems[this.currentStickyItem.index] !== item) : this.items; }\n\n    public get vsItems() { return (this.queryVsItems && this.queryVsItems.toArray()) || []; }\n\n    public get numberItemsRendred(): number { return this.endIndex - this.startIndex; }\n    \n    public get el() { return this.elRef && this.elRef.nativeElement; }\n\n    public get itemsContainerEl() { return this.itemsContainerElRef && this.itemsContainerElRef.nativeElement; }\n    \n    constructor(\n        private elRef: ElementRef<HTMLElement>,\n        private renderer: Renderer2\n\t) {\n\t}\n\n    ngAfterViewInit() {\n        this.queryVsItems.changes.subscribe(() => this.checkStickItem(this.scrollIsUp));\n\t}\n\n    ngOnInit() {\n        this.renderer.listen(this.el, 'scroll', this.onScroll.bind(this));\n\t}\n\t\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsetTimeout(() => {\n            if ('height' in changes) {\n                this.el.style.height = this.height;\n            }\n\n            if ('minRowHeight' in changes) {\n                if (typeof this.minRowHeight === 'string') {\n                    if (parseInt(this.minRowHeight))\n                        this.minRowHeight = parseInt(this.minRowHeight);\n                    else {\n                        console.warn('The [min-row-height] @Input is invalid, the value must be of type \"number\".')\n                        this.minRowHeight = 40;\n                    }\n                }\n            }\n\n\t\t\tif ('originalItems' in changes) {\n                if (!this.originalItems)\n                    this.originalItems = [];\n\n                if (this.currentAndPrevItemsAreDiff()) {\n                    this.previousItemsHeight = new Array(this.originalItems.length).fill(null);\n                \n                    if (this.el.scrollTop !== 0)\n                        this.el.scrollTop = 0;\n                    else {\n                        this.currentScroll = 0;\n                        this.prepareDataItems();\n                        this.checkIsTable();\n                        this.queryVsItems.notifyOnChanges();\n                    }\n                }\n                else {\n                    if (this.originalItems.length > this.prevOriginalItems.length)\n                        this.previousItemsHeight = this.previousItemsHeight.concat(new Array(this.originalItems.length - this.prevOriginalItems.length).fill(null));\n                \n                    this.prepareDataItems();\n                    this.checkIsTable();\n                    this.queryVsItems.notifyOnChanges();\n                }\n\n                this.prevOriginalItems = this.originalItems;\n\t\t\t}\n\t\t});\n    }\n\n    ngAfterContentChecked() {\n        let currentContainerWidth = this.itemsContainerEl && this.itemsContainerEl.clientWidth;\n        if (currentContainerWidth !== this.containerWidth)\n            this.containerWidth = currentContainerWidth;\n        \n        this.manipuleRenderedItems();\n    }\n\n    private currentAndPrevItemsAreDiff() {\n        if (this.originalItems.length >= this.prevOriginalItems.length) {\n            let begin = 0;\n            let end = this.prevOriginalItems.length - 1;\n            for (let i = begin; i <= end; i++) {\n                if (this.originalItems[i] !== this.prevOriginalItems[i])\n                    return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n\tprivate onScroll() {\n        let up = this.el.scrollTop < this.currentScroll;\n        this.currentScroll = this.el.scrollTop;\n\n        this.prepareDataItems();\n        this.isTable = this.checkIsTable();\n        this.lastScrollIsUp = this.scrollIsUp;\n        this.scrollIsUp = up;\n        this.queryVsItems.notifyOnChanges();\n    }\n\n    private prepareDataItems() {\n        this.registerCurrentItemsHeight();\n        this.prepareDataVirtualScroll();\n    }\n\n    private registerCurrentItemsHeight() {\n        let children = this.getInsideChildrens();\n        for (let i = 0; i < children.length; i++) {\n            let child = children[i];\n            let realIndex = this.startIndex + i;\n            this.previousItemsHeight[realIndex] = child.getBoundingClientRect().height;\n        }\n    }\n\n    private getDimensions() {\n        \n        let dimensions = {\n            contentHeight: 0,\n            paddingTop: 0,\n            itemsThatAreGone: 0\n        };\n        \n        dimensions.contentHeight = this.originalItems.reduce((prev, curr, i) => {\n\t\t\tlet height = this.previousItemsHeight[i];\n\t\t\treturn prev + (height ? height : this.minRowHeight);\n        }, 0);\n\n        if (this.currentScroll >= this.minRowHeight) {\n            let newPaddingTop = 0;\n            let itemsThatAreGone = 0;\n            let initialScroll = this.currentScroll;\n            \n            for (let h of this.previousItemsHeight) {\n                let height = h ? h : this.minRowHeight;\n                if (initialScroll >= height) {\n                    newPaddingTop += height;\n                    initialScroll -= height;\n                    itemsThatAreGone++;\n                }\n                else\n                    break;\n            }\n            \n            dimensions.paddingTop = newPaddingTop;\n            dimensions.itemsThatAreGone = itemsThatAreGone;\n        }\n\n        return dimensions;\n    }\n    \n    private prepareDataVirtualScroll() {\n        let dimensions = this.getDimensions();\n        \n        this.contentHeight = dimensions.contentHeight;\n        this.paddingTop = dimensions.paddingTop;\n        this.startIndex = dimensions.itemsThatAreGone;\n        this.endIndex = Math.min((this.startIndex + this.numberItemsCanRender()), (this.originalItems.length - 1));\n\n        if (this.indexCurrentSticky >= 0 && (this.startIndex > this.indexCurrentSticky || this.endIndex < this.indexCurrentSticky)) {\n            if (this.currentStickyItem)\n                this.currentStickyItem.outside = true;\n            this.items = [ ...this.originalItems.slice(this.startIndex, Math.min(this.endIndex + 1, this.originalItems.length)), this.originalItems[this.indexCurrentSticky] ];\n        }\n        else {\n            if (this.currentStickyItem)\n                this.currentStickyItem.outside = false;\n            this.items = this.originalItems.slice(this.startIndex, Math.min(this.endIndex + 1, this.originalItems.length));\n        }\n\n        this.onItemsRender.emit(new AgVsRenderEvent<any>({\n            items: this.itemsNoSticky,\n            startIndex: this.startIndex,\n            endIndex: this.endIndex,\n            length: this.itemsNoSticky.length\n        }));\n                \n        this.manipuleRenderedItems();\n    }\n\n    private numberItemsCanRender() {\n        return Math.floor(this.el.clientHeight / this.minRowHeight) + 2;\n    }\n\n    private manipuleRenderedItems() {\n        let children = this.getInsideChildrens();\n        for (let i = 0; i < children.length; i++) {\n            let child = children[i] as HTMLElement;\n            if (child.style.display !== 'none') {\n                let realIndex = this.startIndex + i;\n                child.style.minHeight = `${this.minRowHeight}px`;\n                child.style.height = `${this.minRowHeight}px`;\n                \n                let className = (realIndex + 1) % 2 === 0 ? 'even' : 'odd';\n                let unclassName = className == 'even' ? 'odd' : 'even';\n\n                child.classList.add(`ag-virtual-scroll-${className}`);\n                child.classList.remove(`ag-virtual-scroll-${unclassName}`);\n            }\n        }\n    }\n\n    private getInsideChildrens(): HTMLCollection {\n        let childrens = this.itemsContainerEl.children;\n        if (childrens.length > 0) {\n            if (childrens[0].tagName.toUpperCase() === 'TABLE') {\n                childrens = childrens[0].children;\n                if (childrens.length > 0) {\n                    if (childrens[0].tagName.toUpperCase() === 'TBODY')\n                        childrens = childrens[0].children;\n                    else\n                        childrens = childrens[1].children;\n                }\n            }\n        }\n\n        return childrens;\n    }\n\n    private checkIsTable() {\n        let childrens = this.itemsContainerEl.children;\n        if (childrens.length > 0) {\n            if (childrens[0].tagName.toUpperCase() === 'TABLE') {\n                childrens = childrens[0].children;\n                if (childrens.length > 0) {\n                    if (childrens[0].tagName.toUpperCase() === 'THEAD'){\n                        let thead = childrens[0] as HTMLElement;\n                        thead.style.transform = `translateY(${Math.abs(this.paddingTop - this.currentScroll)}px)`;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private checkStickItem(up: boolean) {\n        if (!this.isTable && this.vsItems.length > 0) {\n            this.updateVsItems().subscribe(() => {\n                if (this.indexCurrentSticky >= 0) {\n\n                    if (!this.currentStickyItem) {\n                        this.findCurrentStickyByIndex(true);\n                        return;\n                    }\n\n                    if (this.indexNextSticky === -1)\n                        this.indexNextSticky = this.getIndexNextSticky(up);\n    \n                    if (this.currentStickIsEnded(up)) {\n                        if (!up) {\n                            this.indexPrevSticky = this.indexCurrentSticky;\n                            this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n                            this.indexNextSticky = this.getIndexNextSticky(up);\n                        }\n                        else {\n                            if (this.indexPrevSticky >= 0) {\n                                this.setPrevAsCurrentSticky();\n                            }\n                            else {\n                                this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n\n                                if (this.indexCurrentSticky >= 0)\n                                    this.indexNextSticky = this.getIndexNextSticky(up);\n                                else\n                                    this.indexNextSticky = null;\n                            }\n                        }\n                    }\n                }  \n                else {\n                    this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n                    this.indexNextSticky = this.getIndexNextSticky(up);\n                }        \n            });\n        }\n        else {\n            this.indexCurrentSticky = -1;\n            this.indexNextSticky = -1;\n        }\n    }\n\n    private findCurrentStickyByIndex(afterPrev: boolean = false) {\n        let vsIndex = 0;\n        let lastVsIndex = this.vsItems.length - 1;\n        let diffMaxItemsRender = this.vsItems.length - this.numberItemsCanRender();\n\n        if (diffMaxItemsRender > 0 && !this.vsItems.some((vsItem, vsIndex) => this.indexCurrentSticky === (this.startIndex + vsIndex))) {\n            vsIndex = lastVsIndex;\n            let vsItem = this.vsItems[lastVsIndex];\n            let index = this.indexCurrentSticky;\n            let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n            vsItem.isSticked = true;\n            this.currentStickyItem = new StickyItem({\n                comp: vsItem,\n                index: index,\n                vsIndex: vsIndex,\n                offsetTop: offsetTop,\n                height: vsItem.el.offsetHeight,\n                outside: true\n            });\n        }\n        else {\n            for(let vsItem of this.vsItems) {\n                let index = this.startIndex + vsIndex;\n\n                if (this.indexCurrentSticky === index) {\n                    let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n                    vsItem.isSticked = true;\n                    this.currentStickyItem = new StickyItem({\n                        comp: vsItem,\n                        index: index,\n                        vsIndex: vsIndex,\n                        offsetTop: offsetTop,\n                        height: vsItem.el.offsetHeight\n                    });\n                    break;\n                }\n                \n                vsIndex++;\n            }\n        }\n\n        if (afterPrev && this.currentStickyItem) {\n            let currentHeight = this.currentStickyItem.height;\n            let offsetBottom = this.paddingTop + currentHeight + Math.abs(this.el.scrollTop - this.paddingTop);\n            let offsetTopNext = this.indexNextSticky >= 0 ? this.previousItemsHeight.slice(0, this.indexNextSticky).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0) : null;\n            \n            if (offsetTopNext !== null && offsetBottom >= offsetTopNext) {\n                let newDiffTop = offsetBottom - offsetTopNext;\n                if (newDiffTop >= currentHeight) {\n                    this.currentStickyItem.diffTop = currentHeight;\n                    return true;\n                }\n                else\n                    this.currentStickyItem.diffTop = newDiffTop;\n            } \n            else\n                this.currentStickyItem.diffTop = 0;\n        }\n    }\n\n    private setPrevAsCurrentSticky() {\n        let currentSticked = this.currentStickyItem && this.currentStickyItem.comp.sticky;\n\n        if (currentSticked) \n            this.indexNextSticky = this.indexCurrentSticky;\n\n        this.indexCurrentSticky = this.indexPrevSticky;\n        this.indexPrevSticky = -1;\n    }\n\n    private getIndexCurrentSticky(up: boolean) {\n        let vsIndex = 0;\n        for (let vsItem of this.vsItems) {\n            let index = vsIndex + this.startIndex;\n\n            let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n            \n            if (vsItem && vsItem.sticky &&\n                this.el.scrollTop >= offsetTop &&\n                (this.indexCurrentSticky === -1 || index !== this.indexCurrentSticky)\n            )\n                return index;\n\n            vsIndex++;\n        };\n        \n        return -1;\n    }\n\n    private getIndexNextSticky(up: boolean) {\n        if (this.indexCurrentSticky >= 0) {\n            let vsIndex = 0;\n\n            for (let vsItem of this.vsItems.slice(0, this.numberItemsCanRender())) {\n                let index = vsIndex + this.startIndex;\n\n                if (vsItem.sticky && index > this.indexCurrentSticky)\n                    return index;\n\n                vsIndex++;\n            }\n        }\n\n        return -1;\n    }\n\n    private currentStickIsEnded(up: boolean) {\n        let currentHeight = this.currentStickyItem.height;\n        \n        if (!up || this.currentStickyItem.diffTop > 0) {\n            let offsetBottom = this.paddingTop + currentHeight + Math.abs(this.el.scrollTop - this.paddingTop);\n            let offsetTopNext = this.indexNextSticky >= 0 ? this.previousItemsHeight.slice(0, this.indexNextSticky).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0) : null;\n            \n            if (offsetTopNext !== null && offsetBottom >= offsetTopNext) {\n                let newDiffTop = offsetBottom - offsetTopNext;\n                if (newDiffTop >= currentHeight) {\n                    this.currentStickyItem.diffTop = currentHeight;\n                    return true;\n                }\n                else\n                    this.currentStickyItem.diffTop = newDiffTop;\n            } \n            else\n                this.currentStickyItem.diffTop = 0;\n        }\n        else {\n            let offsetBottom = this.paddingTop + Math.abs(this.el.scrollTop - this.paddingTop);\n            if (offsetBottom <= this.currentStickyItem.offsetTop) {\n                return true;\n            } \n        }\n\n        return false;\n    }\n\n    private updateVsItems() {\n        return new Observable<void>((subscriber) => {\n            if (this.subscripAllVsItem.length) {\n                this.subscripAllVsItem.forEach((item) => item.subscrip.unsubscribe());\n                this.subscripAllVsItem = [];\n            }\n\n            let interval = setInterval(() => {\n                let diffMaxItemsRender = this.vsItems.length - this.numberItemsCanRender();\n                let lastIndex = this.vsItems.length - 1;\n                let ok = this.vsItems.every((vsItem, vsIndex) => {\n                    let index = this.startIndex + vsIndex;\n\n                    if (diffMaxItemsRender > 0 && vsIndex === lastIndex)\n                        index = this.indexCurrentSticky;\n\n                    if (!this.currentStickyItem || vsItem !== this.currentStickyItem.comp)\n                        vsItem.isSticked = false;\n\n                    if (!this.subscripAllVsItem.some(item => item.comp === vsItem))\n                        this.subscripAllVsItem.push({\n                            comp: vsItem,\n                            subscrip: vsItem.onStickyChange.subscribe((sticky) => {\n                                this.onStickyComponentChanged(vsItem, index);\n                            })\n                        });\n\n                    try { vsItem.forceUpdateInputs(); }\n                    catch { return false; }\n\n                    return true;\n                });\n\n                if (ok) {\n                    clearInterval(interval);\n                    this.manipuleRenderedItems();\n                    subscriber.next();\n                }\n            });\n        });\n    }\n\n    private onStickyComponentChanged(vsItem: AgVsItemComponent, index: number) {\n        if (index === this.indexCurrentSticky) {\n            if (!vsItem.sticky) {\n                if (this.indexPrevSticky >= 0) {\n                    this.setPrevAsCurrentSticky();\n                }\n                else {\n                    this.indexCurrentSticky = this.getIndexCurrentSticky(false);\n\n                    if (this.indexCurrentSticky >= 0)\n                        this.indexNextSticky = this.getIndexNextSticky(false);\n                    else\n                        this.indexNextSticky = null;\n                }\n            }\n        }\n        else if ((this.indexCurrentSticky !== -1 && index < this.indexCurrentSticky) || index === this.indexPrevSticky) {\n            if (vsItem.sticky)\n                this.indexPrevSticky = index;\n            else\n                this.indexesPrevStick = this.indexesPrevStick.filter(indexPrev => indexPrev !== index);\n        }\n        else if ((this.indexCurrentSticky !== -1 && index > this.indexCurrentSticky) || index === this.indexNextSticky) {\n            if (vsItem.sticky && (this.indexNextSticky === -1 || index < this.indexNextSticky))\n                this.indexNextSticky = index;\n            else if (!vsItem.sticky)\n                this.indexNextSticky = -1;\n        }\n        else\n            return;\n\n        this.queryVsItems.notifyOnChanges();\n    }\n\n    ngOnDestroy() {\n    }\n}\n\n\nexport class StickyItem {\n    comp: AgVsItemComponent;\n    index: number;\n    offsetTop: number = 0;\n    vsIndex: number;\n    diffTop: number = 0;\n    isUp: boolean = false\n    height: number = 0;\n    outside: boolean = false;\n\n    constructor(obj?: Partial<StickyItem>) {\n        if (obj) Object.assign(this, obj);\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n   name: 'mathAbs'\n})\nexport class MathAbsPipe implements PipeTransform {\n\n   constructor() {}\n\n   transform(value: number) {\n      if (value)\n         return Math.abs(value);\n      return value;\n   }\n}","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n   name: 'stickedClasses'\n})\nexport class StickedClassesPipe implements PipeTransform {\n\n   private exceptionClasses: string[] = [\n      'ag-virtual-scroll-odd',\n      'ag-virtual-scroll-even',\n   ];\n\n   constructor() {}\n\n   transform(classes: string) {\n      if (classes) {\n         let splitted = classes.includes(' ') ? classes.split(' ') : [classes];\n         return splitted.filter(className => !this.exceptionClasses.some(exc => exc === className)).join(' ');\n      }\n      return '';\n   }\n}","import { NgModule, } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AgVirtualSrollComponent } from './ag-virtual-scroll.component';\nimport { AgVsItemComponent } from './ag-vs-item/ag-vs-item.component';\nimport { MathAbsPipe } from './pipes/math-abs.pipe';\nimport { StickedClassesPipe } from './pipes/sticked-classes.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        AgVirtualSrollComponent,\n        AgVsItemComponent,\n\n        // Pipes\n        MathAbsPipe,\n        StickedClassesPipe\n    ],\n    exports: [\n        AgVirtualSrollComponent,\n        AgVsItemComponent\n    ],\n    entryComponents: [\n        AgVirtualSrollComponent,\n        AgVsItemComponent\n    ]\n})\nexport class AgVirtualScrollModule { }\n"]}